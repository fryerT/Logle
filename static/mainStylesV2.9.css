/* variables */
:root {
	--backgroundColorMain: #362c36;
	--textColor: #f7f6f0;
	--borderColor: 	#a7cbd5;
	--backgroundColorSecondary: #4d4c59;
	--backgroundColorHover: #71777d;
	--defaultFont: monospace;
}

/* global */
html {
	background-color: var(--backgroundColorMain);
	height: 95vh;
	font-family: var(--defaultFont);
}


/* phone styles */
@media (max-width: 450px) {
	.wrapper {
		display: grid;
		grid-template-areas:
			'headerTxt headerTxt headerTxt headerTxt' 
			'contWrap contWrap contWrap contWrap'
			'contWrap contWrap contWrap contWrap'
			'contWrap contWrap contWrap contWrap'
			'contWrap contWrap contWrap contWrap' 
			'contWrap contWrap contWrap contWrap'
			'contWrap contWrap contWrap contWrap'
			'contWrap contWrap contWrap contWrap'
			'desc desc desc desc';
		grid-template-rows: 18vw repeat(7, 5vw) 200vw;
		grid-template-columns: repeat(4, 25vw);
	}
	.contWrapper {
		grid-template-areas:
			'rio rio'
			'charInput charInput'
			'servInput servInput'
			'specInput specInput'
			'metricDDW metricDDW'
			'keyLvlDDW keyLvlDDW'
			'runButton runButton';
		grid-template-rows: 4vw repeat(6, 4.5vw);
		grid-template-columns: repeat(2, 1fr);
		grid-gap: 5vw;
		margin-left: 1vw;
		margin-right: 1vw;
		margin-top: 1vw;
	}
	.togWrapper {
		border-radius: 1vw;
		border: 0.4vw solid var(--borderColor);
		height: 15vw;
		width: 36vw;
		font-size: 3.25vw;
		line-height: 4.5vw;
		
		top: 97vw;
		right: 2vw;
	}


	.headerText {
		font-size: 10vw;
		border-radius: 0vw;
		border-bottom: 0.4vw solid var(--borderColor);
		line-height: 13vw;
	}

	.charText, .servText, .specText, .metricText, .keyLvlText, .rio { font-size: 5.5vw; text-align: center; }

	.inputBox, .inputBoxRio {
		border-radius: 1vw;
		border: 0.4vw solid var(--borderColor);
		height: 5.5vw;
	}
	.inputBox {
		width: 40vw;
		font-size: 4vw;
	}	
	.inputBoxRio {
		width: 60vw;
		font-size: 4vw;
	}

	.dropdownMenu {
		width: 12vw;
		height:6.5vw;
		font-size: 4vw;
		border-radius: 1vw;
		border: 0.4vw solid var(--borderColor);
		line-height: auto;
	}

	.buttonStyle {
		font-size: 5.5vw;
		border-radius: 1vw;
		border: 0.4vw solid var(--borderColor);
		width: 40vw;
		height: 7vw;
		line-height: auto;
	}
	
	.inputBox:hover, .dropdownMenu:hover, .buttonStyle:hover, .inputBoxRio:hover { box-shadow: 0 1vw 2vw 0 rgba(0,0,0,0.2), 0 0.75vw 2.5vw 0 rgba(0,0,0,0.19); }
	
	.rioToggle input, .specToggle input, .pasteRioToggle input { height: 3vw; width: 3vw; }
	
	
	.togTogBox { 
		top: 85vw;
		right: 14.5vw;
		
		background-color: none;
		border: none;
		border-radius: none;
		height: 9vw;
		width: 9vw;
		padding: 0.5vw;
	}
	.togTogContainer {
		font-size: 3vw;	
		height: 9vw;
		width: 9vw;
	}
	
	.descriptionText {
		font-size: 2.5vw;
		border-top: 0.4vw solid var(--borderColor);
		padding: 1vw;
	}

	.bannerLeft, .bannerRight { display: none; }
}


/* every other device styles */
@media (min-width: 451px) {
	.wrapper {
		grid-template-areas:
			'banL headerTxt headerTxt headerTxt headerTxt banR' 
			'banL contWrap contWrap contWrap contWrap banR' 
			'banL contWrap contWrap contWrap contWrap banR' 
			'banL contWrap contWrap contWrap contWrap banR' 
			'banL contWrap contWrap contWrap contWrap banR' 
			'banL contWrap contWrap contWrap contWrap banR' 
			'banL desc desc desc desc banR';
		grid-template-rows: 9vw repeat(4, 2.5vw) 14.5vw auto;
		grid-template-columns: 12.9vw 7vw repeat(2, 30.1vw) 7vw 12.9vw;
	}
	
	.togWrapper {
		border-radius: 0.5vw;
		border: 0.2vw solid var(--borderColor);
		height: 3.5vw;
		width: 13vw;
		font-size: 1.25vw;
		line-height: 1.75vw;
		top: 19vw;
		right: 1vw;
	}

	.contWrapper {
		grid-template-areas:
			'. .'
			'charInput metricDDW'
			'servInput keyLvlDDW'
			'specInput runButton'
			'rio rio'
			'. .'
			'. .';
		grid-template-rows: 4vw repeat(6, 2.5vw);
		grid-template-columns: repeat(2, 35.35vw);
		grid-gap: 1.5vw;
		margin-left: 1vw;
		margin-right: 1vw;
	}
	

	.inputBox, .inputBoxRio {
		height: 2.5vw;
		border-radius: 0.5vw;
		border: 0.2vw solid var(--borderColor);
		font-size: 2vw;
	}
	
	.inputBox { width: 15vw; }
	
	.inputBoxRio { width: 57.5vw; }

	.dropdownMenu{
		width: 6vw;
		height: 2.8vw;
		font-size: 1.75vw;
		border-radius: 0.5vw;
		border: 0.2vw solid var(--borderColor);
		line-height: auto;
	}

	.buttonStyle {
		font-size: 2vw;
		border-radius: 1vw;
		border: 0.3vw solid var(--borderColor);
		width: 20vw;
		height: 2.75vw;
		line-height: 1.375vw;
	}


	.rioToggle input, .specToggle input, .pasteRioToggle input { height: 1vw; width: 1vw; }

	.togTogContainer { 
		font-size: 1.5vw; 
		height: 3vw; 
		width: 3vw;
	}
	
	.headerText {
		font-size: 5vw; 
		border-bottom: 0.2vw solid var(--borderColor); 
		line-height: 5vw;
	}
	.charText, .servText, .specText, .metricText, .keyLvlText, .rio { font-size: 2.25vw; }
	.descriptionText {
		font-size: 0.9vw;
		border-top: 0.2vw solid var(--borderColor);
		border-radius: 0;
		padding: 0.5vw 1vw;
		
		grid-area: desc;
		width: 72.3vw;
	}


	
	.togTogBox { 
		top: 13.9vw;
		right: 5.5vw;
		
		background-color: var(--backgroundColorSecondary);
		border: 0.2vw solid var(--borderColor);
		border-radius: 0.5vw;
		height: 3vw;
		width: 3vw;
		padding: 0.5vw;
	}
	
	
	.inputBox:hover, .dropdownMenu:hover, .buttonStyle:hover, .inputBoxRio:hover { box-shadow: 0 0.5vw 1vw 0 rgba(0,0,0,0.2), 0 0.375vw 1.25vw 0 rgba(0,0,0,0.19); }
}


/* main wrapper that holds the content wrapper, header, description, and banner */
.wrapper {
	display: grid;
	grid-gap: 0vw;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

/* toggle wrapper that contains all the options for the program */
.togWrapper {
	display: grid;
	grid-template-areas: 
		'specTog' 
		'rioTog' 
		'pasteRioTog';
	grid-template-columns: 1fr;
	grid-template-rows: repeat(3, 1fr);
	grid-area: togWrap;
	background-color: var(--backgroundColorSecondary);
	text-align: center;
	color: var(--textColor);
	margin: 0vw auto;
	position: absolute;
}

/* content wrapper that contains the raiderIO, character, server, specialization, metric, and key level inputs */
.contWrapper {
	display: grid;
	grid-area: contWrap;
}

/* universal settings for the character, raiderIO, server, specialization, and run button */
.inputBox, .inputBoxRio, .buttonStyle {
	padding: 0vw;
	background-color: var(--backgroundColorSecondary);
	text-align: center;
	color: var(--textColor);
	font-family: inherit;
	overflow: hidden;
	text-overflow: ellipsis;
}

/* dropdown menu settings for the metric and minimum key level inputs */
.dropdownMenu{
	text-align: center;
	background-color: var(--backgroundColorSecondary);
	color: var(--textColor);
	-webkit-appearance: none !important;
	padding: 0vw;	
}

/* run button */
.buttonStyle {
	cursor: pointer;
	margin: auto auto;
	color: var(--textColor);
	grid-area: runButton;
}

/* settings for all the toggles that are inside of the toggle wrapper */
.rioToggle input, .specToggle input, .pasteRioToggle input { cursor: pointer; margin: 0vw; }

/* header text */
.headerText {
	text-align: center;
	top: 0vw;
	background-color: var(--backgroundColorSecondary);
	color: var(--textColor);
	grid-area: headerTxt;
}

/* universal settings for all text elements except the header text */
.charText, .servText, .specText, .metricText, .keyLvlText, .rio { padding: 0vw; color: var(--textColor); text-align: center; }

/* description text */
.descriptionText {
	text-align: left;
	color: var(--textColor);
	background-color: var(--backgroundColorSecondary); 
	position: fixed;
	bottom: 0; 
	font-family: inherit;
}

/* banner settings */
.bannerLeft, .bannerRight { background-size: fit; background: url(dungeonBorder5.png); margin: 0; }

/* the tiny box behind the settings toggle, only visible in the non-mobile version */
.togTogBox { position: fixed; }

/* gear icon settings toggle */
.togTogContainer {
	cursor: pointer;
	caret-color: transparent;
	display: block;
	grid-area: togTog;
	margin: 0 auto;
	text-align: center;
	color: var(--textColor);
}
/* changes the image of the settings toggle */
.togTogUnchecked { display: inline; }
.togTogCheckedHover, .togTogUncheckedHover, .togTogChecked, .togTogContainer input { display:none; }
.togTogContainer input:checked ~ .togTogChecked { display: inline; }
.togTogContainer input:checked ~ .togTogUnchecked { display: none; }
.togTogContainer:hover input:not(:checked) ~ .togTogUncheckedHover { display: inline; }
.togTogContainer:hover input:not(:checked) ~ .togTogUnchecked { display: none; }
.togTogContainer:hover input:checked ~ .togTogCheckedHover { display: inline; }
.togTogContainer:hover input:checked ~ .togTogChecked { display: none; }

/* hover and focus settings for everything the user can interact with */
.inputBox:hover, .dropdownMenu:hover, .buttonStyle:hover, .inputBoxRio:hover { background-color: var(--backgroundColorHover); }
.dropdownMenu:focus, .inputBox:focus, .buttonStyle:focus, .inputBoxRio:focus { outline: none; border-color: var(--textColor); }
/* removes the drop down arrow from specialization and server text inputs that use suggestion text */
.inputBox::-webkit-calendar-picker-indicator { display:none !important; }

/* assigns grid-areas to each element */
.charText { grid-area: charInput; }
.servText { grid-area: servInput; }
.specText { grid-area: specInput; }
.metricText { grid-area: metricDDW; }
.keyLvlText { grid-area: keyLvlDDW; }
.rio { grid-area: rio; }
.rioToggle { grid-area: rioTog; }
.pasteRioToggle { grid-area: pasteRioTog; }
.specToggle { grid-area: specTog; }
.bannerLeft { grid-area: banL; }
.bannerRight { grid-area: banR; }