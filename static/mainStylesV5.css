/* content grid that makes up the content contained in the middle of the page */
	#contGrid {
		display: grid;
		grid-template-areas:
			'headerTxt headerTxt'
			' . . '
			'charInput metricDDW'
			'servInput keyLvlDDW'
			'specInput runButton'
			'rio rio'
			'. .'
			'desc desc';
		grid-template-rows: 9vw 2.9vw repeat(4, 2.5vw) auto 11vw;
		grid-template-columns: repeat(2, 1fr);
		grid-gap: 1.5vw;
		grid-area: contGrid;
	}

	/* header */
	#header {
		text-align: center;
		background-color: var(--backgroundColorSecondary);
		grid-area: headerTxt;
		border-bottom: 0.2vw solid var(--borderColor); 
	}
	#logoImage {
		height: 100%;
		width: auto;
		content: var(--logoImage);
	}

	/* text inputs */
	.inputText {
		font-size: 2vw;
		font-family: inherit;
		text-align: center;
		height: 2.5vw;
		width: 15vw;
		border: 0.2vw solid var(--borderColor);
		border-radius: 0.5vw;
		background-color: var(--backgroundColorSecondary);
		text-overflow: ellipsis;
		caret-color: initial;
		color: inherit;
		padding: inherit;
	}
	/* removes the drop down arrow from specialization and server text inputs that use suggestion text */
	.inputText::-webkit-calendar-picker-indicator { 
		display:none !important; 
	}
	#rioInput {
		width: 57.5vw;
	}

	/* text class, used for everything except the settings toggle */
	.text {  color: inherit; text-align: center; font-size: 2.25vw; opacity: 0; }

	/* dropdown menu settings for the metric and minimum key level inputs */
	.dropdownMenu{
		text-align: center;
		background-color: var(--backgroundColorSecondary);
		color: inherit;
		font-family: inherit;
		-webkit-appearance: none !important;
		
		width: 6vw;
		height: 2.8vw;
		font-size: 2vw;
		border-radius: 0.5vw;
		border: 0.2vw solid var(--borderColor);
	}

	/* grid-area's for elements that use .inputText, .text, or .dropdownMenu */
	#char { grid-area: charInput; }
	#serv { grid-area: servInput; }
	#spec { grid-area: specInput; }
	#met { grid-area: metricDDW; }
	#keyLvl { grid-area: keyLvlDDW; }
	#rio { grid-area: rio; }

	/* run button */
	#runBtn {
		width: 20vw;
		height: 2.75vw;
		
		font-size: 2vw;
		font-family: inherit;
		color: inherit;
		text-align: center;
		line-height: 1.375vw;
		
		border: 0.3vw solid var(--borderColor);
		border-radius: 1vw;
		
		background-color: var(--backgroundColorSecondary);
		
		margin: auto;
		
		cursor: pointer;
		
		grid-area: runButton;
		
		opacity: 0;
	}

	/* description text */
	#descriptionText {
		text-align: left;
		color: var(--textColor);
		background-color: var(--backgroundColorSecondary); 

		font-family: inherit;
		
		font-size: 1vw;
		border-top: 0.2vw solid var(--borderColor);
		padding: 0.5vw 1vw;
		
		grid-area: desc;
	}




/* settings toggle */

	/* gear icon that is used to toggle settings */
	#togTogContainer {
		cursor: pointer;
		display: block;
		grid-area: togTog;
		margin: 0 auto;
		text-align: center;
		color: inherit;
		
		font-size: 1.5vw; 
		height: 3vw; 
		width: 3vw;
		background-color: transparent;
	}
		/* conditions on how the custom checkbox should act */
		#togTogUnchecked { display: inline; }
		#togTogCheckedHover, #togTogUncheckedHover, #togTogChecked, #togTogContainer input { display:none; }
		#togTogContainer input:checked ~ #togTogChecked { display: inline; }
		#togTogContainer input:checked ~ #togTogUnchecked { display: none; }
		#togTogContainer:hover input:not(:checked) ~ #togTogUncheckedHover { display: inline; }
		#togTogContainer:hover input:not(:checked) ~ #togTogUnchecked { display: none; }
		#togTogContainer:hover input:checked ~ #togTogCheckedHover { display: inline; }
		#togTogContainer:hover input:checked ~ #togTogChecked { display: none; }
		/* custom checkbox size and content */
		#togTogUnchecked, #togTogChecked, #togTogUncheckedHover, #togTogCheckedHover { height: 100%; width: 100%; }
		#togTogUnchecked { content: var(--togTogUncheckedImage); }
		#togTogChecked { content: var(--togTogCheckedImage); }
		#togTogUncheckedHover { content: var(--togTogUncheckedHoverImage); }
		#togTogCheckedHover { content: var(--togTogCheckedHoverImage); }
		/* the tiny box behind the settings toggle, only visible in the non-mobile version */
		#togTogBox { 
			position: fixed; 
			top: 13.9vw;
			right: 5.5vw;
			background-color: var(--backgroundColorSecondary);
			border: 0.2vw solid var(--borderColor);
			border-radius: 0.5vw;
			height: 3vw;
			width: 3vw;
			padding: 0.5vw;
		}

	/* toggle grid that appears when #togTogContainer (gear icon) is 'toggled' to show */
	#togGrid {
		display: grid;
		grid-template-areas: 
			'specTog' 
			'rioTog' 
			'pasteRioTog';
		grid-template-columns: 1fr;
		grid-template-rows: repeat(3, 1fr);
		background-color: var(--backgroundColorSecondary);
		text-align: center;

		margin: 0vw auto;
		position: absolute;
		
		border-radius: 0.5vw;
		border: 0.2vw solid var(--borderColor);
		height: 3.5vw;
		width: 14vw;
		font-size: 1.25vw;
		line-height: 1.75vw;
		top: 19vw;
		right: 1vw;
		opacity: 0;
	}

	/* custom checkboxes, used for elements contained in the #togGrid */
	.checkboxContainer {
		cursor: pointer;
		display: block;
		margin: 0 auto;
		text-align: center;
	}
		/* conditions on how the custom checkbox should act */
		.unchecked { display: inline;  }
		.checkedHover, .uncheckedHover, .checked, .checkboxContainer input { display:none; }
		.checkboxContainer input:checked ~ .checked { display: inline; }
		.checkboxContainer input:checked ~ .unchecked { display: none; }
		.checkboxContainer:hover input:not(:checked) ~ .uncheckedHover { display: inline; }
		.checkboxContainer:hover input:not(:checked) ~ .unchecked { display: none; }
		.checkboxContainer:hover input:checked ~ .checkedHover { display: inline; }
		.checkboxContainer:hover input:checked ~ .checked { display: none; }
		/* custom checkbox size and content */
		.unchecked, .checked, .uncheckedHover, .checkedHover { vertical-align: -0.1vw; height: 1vw; width: 1vw; }
		.unchecked { content: var(--uncheckedImage); }
		.checked { content: var(--checkedImage); }
		.uncheckedHover { content: var(--uncheckedHoverImage); }
		.checkedHover { content: var(--checkedHoverImage); }




/* hover and focus settings */
.inputText:hover, .dropdownMenu:hover, #runBtn:hover { 
	background-color: var(--backgroundColorHover); 
	box-shadow: 0 0.5vw 1vw 0 rgba(0,0,0,0.2), 0 0.375vw 1.25vw 0 rgba(0,0,0,0.19); 
}
.dropdownMenu:focus, .inputText:focus, #runBtn:focus { 
	outline: none; 
	border-color: var(--textColor); 
}




/* phone styles */
	@media (max-width: 450px) {
		
		#contGrid {
			grid-template-areas:
				'headerTxt headerTxt'
				'. .'
				'rio rio'
				'charInput charInput'
				'servInput servInput'
				'specInput specInput'
				'metricDDW metricDDW'
				'keyLvlDDW keyLvlDDW'
				'runButton runButton'
				'desc desc';
			grid-template-rows: 18vw 0vw repeat(6, 4.5vw) auto 38vw;
			grid-template-columns: repeat(2, 1fr);
			grid-gap: 5vw;
		}
		
		#header {
			font-size: 10vw;
			border-radius: 0vw;
			border-bottom: 0.4vw solid var(--borderColor);
			line-height: 13vw;
		}

		.inputText { 
			border-radius: 1vw;
			border: 0.4vw solid var(--borderColor);
			height: 5.5vw;  
			width: 40vw;
			font-size: 4vw;
		}
		#rioInput { 
			width: 60vw; 
		}

		.text { 
			font-size: 5.5vw; 
			text-align: center; 
		}

		.dropdownMenu {
			width: 12vw;
			height:6.5vw;
			font-size: 4vw;
			border-radius: 1vw;
			border: 0.4vw solid var(--borderColor);
		}
		
		#runBtn {
			font-size: 5.5vw;
			border-radius: 1vw;
			border: 0.4vw solid var(--borderColor);
			width: 40vw;
			height: 7vw;
		}
		
		#descriptionText { 
			font-size: 2.5vw; 
			border-top: 0.4vw solid var(--borderColor); 
			padding: 1vw; 
			width: 100%; 
		}



		#togTogContainer { 
			font-size: 3vw; 
			height: 9vw; 
			width: 9vw; 
		}
		#togTogBox { 
			top: 85vw;
			right: 14.5vw;
			background-color: var(--backgroundColorMain);
			border: none;
			border-radius: 0;
			height: 9vw;
			width: 9vw;
			padding: 0.5vw;
		}
		
		#togGrid {
			border-radius: 1vw;
			border: 0.4vw solid var(--borderColor);
			height: 15vw;
			width: 40vw;
			font-size: 3.25vw;
			line-height: 4.5vw;
			top: 97vw;
			right: 2vw;
		}

		.unchecked, .checked, .uncheckedHover, .checkedHover { 
			height: 3vw; 
			width: 3vw; 
		}




		.inputText:hover, .dropdownMenu:hover, #runBtn { box-shadow: 0 1vw 2vw 0 rgba(0,0,0,0.2), 0 0.75vw 2.5vw 0 rgba(0,0,0,0.19); }	
	
	}