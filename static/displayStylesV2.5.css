/* variables */
:root {
	--backgroundColorMain: #362c36;
	--textColor: #f7f6f0;
	--borderColor: 	#a7cbd5;
	--backgroundColorSecondary: #4d4c59;
	--backgroundColorHover: #71777d;
	--defaultFont: monospace;
	
	--bannerImage: url(images/banner.png);
	--encImage0: url(images/AA.png);
	--encImage1: url(images/BH.png);
	--encImage2: url(images/HoI.png);
	--encImage3: url(images/Nel.png);
	--encImage4: url(images/RLP.png);
	--encImage5: url(images/AV.png);
	--encImage6: url(images/NO.png);
	--encImage7: url(images/Uld.png);
}

/* global */
html {
	background-color: var(--backgroundColorMain);
	height: 95vh;
	font-family: var(--defaultFont);
	caret-color: transparent;
	cursor: default;
}


/* phone settings */
@media (max-width: 450px) {
	.wrapper {
		grid-template-areas: 'contWrap''invis';
		grid-template-rows: repeat(2, 500vw);
		grid-template-columns: 1fr;
		grid-gap: 0vw;
		top: 2vw;
		left: 2vw;
		right: 2vw;
	}

	.contWrapper {
		grid-template-areas: 'avg' 'enc0' 'enc1' 'enc2' 'enc3' 'enc4' 'enc5' 'enc6' 'enc7' 'btn';
		grid-template-columns: 1fr;
		grid-template-rows:  15vw repeat(8, 10vw) 10vw;
		grid-gap: 4vw;
		margin: 0 2vw;
	}
	
	.encWrapper {
		grid-template-areas:
			'img name parse'
			'img amount parse';
		grid-template-columns: 1fr 4fr 1fr;
		grid-template-rows: 0.5fr 1fr;
		border-radius: 1vw;
		height: auto;
	}
	.encImage0, .encImage1, .encImage2, .encImage3, .encImage4, .encImage5, .encImage6, .encImage7 {
		height: 9vw;
		width: 9vw;
		margin: 0.6vw;
	}

	.specChoice {
		grid-template-rows: repeat(4, 5vw);
		
		background: none;
		top: 131vw;
		right: 1.5vw;
		border: none;
		border-radius: 1.25vw;
		height: 24.375vw;
		width: 25vw;
		
		font-size: 3.75vw;
	}
	.specChoiceBtn {
		border: 0.25vw solid var(--borderColor);
		height: 5vw;
		font-size: 2.5vw;
	}
	
	.numOfRunsCont {
		top: 131vw;
		left: 6vw;
		grid-template-columns: 16vw;
		font-size: 2.5vw;
		display: none;
	}
	
	.rtnBtn {
		height: 8vw;
		width: 40vw;
		border-radius: 1vw;
		border: 0.6vw solid var(--borderColor);
		line-height: 4vw;
		font-size: 4vw;
	}

	.tempBtn {
		border-radius: 0vw;
		border-bottom: 0.4vw solid var(--borderColor);
		height: 16vw;
	}	
	
	.playerName, .dungeon, .parse, .avgParse { font-size: 4.5vw; }
	.amount { font-size: 4vw; line-height: auto; }
	.parse { line-height: 10vw;}

	.rtnBtn:hover, .specChoiceBtn:hover { box-shadow: 0 1vw 2vw 0 rgba(0,0,0,0.2), 0 0.75vw 2.5vw 0 rgba(0,0,0,0.19); }
	
	.bannerLeft, .bannerRight { display: none; }
}

/* every other view */
@media (min-width: 451px) {
	.wrapper {
		grid-template-areas:
			'banL contWrap banR' 
			'banL contWrap banR' 
			'banL contWrap banR' 
			'banL contWrap banR' 
			'banL contWrap banR'
			'banL contWrap banR'
			'banL invis banR';
		grid-template-rows: repeat(5, 12vw) 5vw auto;
		grid-template-columns: 12.9vw 74.2vw 12.9vw;
		grid-gap: 0vw;
		top: 0;
		left: 0;
		right: 0;
	}

	.contWrapper {
		grid-template-areas:
			'avg avg'
			'enc0 enc1'
			'enc2 enc3'
			'enc4 enc5'
			'enc6 enc7'
			'btn btn';
		grid-template-columns: repeat(2, 1fr);
		grid-template-rows: repeat(5, 7vw) 5vw;
		grid-gap: 2vw;
		margin: 0 1vw;
	}

	.encWrapper {
		grid-template-areas:
			'img name'
			'img amount'
			'img parse';
		grid-template-columns: 1fr 3fr;
		grid-template-rows: 2.85vw 2.25vw 2.25vw;
		height: 8vw;
		border-radius: 0.5vw;
	}
	.encImage0, .encImage1, .encImage2, .encImage3, .encImage4, .encImage5, .encImage6, .encImage7 {
		height: 100%;
		width: 100%;
		margin: 0.35vw 1vw 0.3vw 1vw;
	}

	.specChoice {
		grid-template-rows: repeat(4, 2.5vw);
		
		top: 25vw;
		right: 1.5vw;
		border: 0.2vw solid var(--borderColor);
		border-radius: 0.5vw;
		height: 9.75vw;
		width: 10vw;
		
		font-size: 1.5vw;
	}
	.specChoiceBtn {
		border: 0.1vw solid var(--borderColor);
		height: 2vw;
		font-size: 1vw;
	}

	.numOfRunsCont {
		display: grid;
		top: 8.5vw;
		right: 2.65vw;
		grid-template-columns: 8vw;
		border-radius: 0.5vw;
		border: 0.2vw solid var(--borderColor);
		font-size: 1.25vw;
	}

	.rtnBtn {
		height: 4vw;
		width: 20vw;
		border-radius: 0.5vw;
		border: 0.3vw solid var(--borderColor);
		line-height: 2vw;
		font-size: 2vw;
	}

	.tempBtn {
		border-radius: 0vw;
		border: 0.2vw solid var(--backgroundColor);
		height: 8vw;
		margin-top: 0.5vw;
		border-bottom: 0.2vw solid var(--borderColor);
	}	

	.playerName, .dungeon, .parse, .avgParse { font-size: 2.25vw; line-height: auto; }
	.amount { font-size: 2vw; line-height: auto; }

	.rtnBtn:hover, .specChoiceBtn:hover { box-shadow: 0 0.5vw 1vw 0 rgba(0,0,0,0.2), 0 0.375vw 1.25vw 0 rgba(0,0,0,0.19); }
}

/* main grid that contains the content grid */
.wrapper {
	display: grid;
	color: var(--textColor);
	position: fixed;
	bottom: 0;
}

/* content grid that contains the average, return button, and all encounters */
.contWrapper {
	display: grid;
	grid-area: contWrap;
}

/* encounter grid that is located inside of the content grid, contains the encounter image, name,amount, and parse */
.encWrapper {
	display: grid;

	grid-gap: 0vw;		
	font-family: var(--defaultFont);
	background-color: var(--backgroundColorSecondary);
	color: var(--textColor);
	padding: 0vw;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	text-align: center;
	cursor: default;
	width: 100%;
		
		
	border: none;
}
/* the image for the encounter that will be located inside of the encounter grid */
.encImage0 { content: var(--encImage0); }
.encImage1 { content: var(--encImage1); }
.encImage2 { content: var(--encImage2); }
.encImage3 { content: var(--encImage3); }
.encImage4 { content: var(--encImage4); }
.encImage5 { content: var(--encImage5); }
.encImage6 { content: var(--encImage6); }
.encImage7 { content: var(--encImage7); }

/* specialization choice grid that contains the specialization buttons */
.specChoice {
	display: none;
	grid-template-areas: 'spec0' 'spec1' 'spec2' 'spec3';
	grid-template-columns: 1fr;
	
	position: fixed;
	background: var(--backgroundColorMain);
	
	color: var(--textColor);
	font-family: inherit;
	text-align: center;
}
/* specialization button that runs logle again with the selected spec specified */
.specChoiceBtn {
	display: none;
	background: var(--backgroundColorSecondary);
	width: 100%;
	color: var(--textColor);
	font-family: inherit;
	cursor: pointer;
}

/* number of runs */
.numOfRunsCont {
	position: fixed;
	background-color: var(--backgroundColorMain);
	color: var(--textColor);
	text-align: center;
}

/* button the user clicks to return to the main page */
.rtnBtn {
	cursor: pointer;
	padding: 0vw;
	margin: 0 auto;
	background-color: var(--backgroundColorSecondary);
	color: var(--textColor);
	grid-area: btn;
	text-align: center;
}

/* the average object that displays the character name, specialization(s), and the average parse */
.tempBtn {
	font-family: var(--defaultFont);
	background-color: var(--backgroundColor);
	color: var(--textColor);
	padding: 0vw;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	text-align: center;
	width: 100%;
	cursor: default;
}	

/* banner settings */
.bannerLeft, .bannerRight { background-size: fit; background: var(--bannerImage); margin: 0; }

/* focus and hover settings for anything the user can interact with */
.rtnBtn:focus, .specChoiceBtn:focus {
	outline: none;
	border-color: var(--textColor);
}
.rtnBtn:hover, .specChoiceBtn:hover { background-color: var(--backgroundColorHover); }

/* assigns grid-areas */
.playerName, .dungeon, .parse, .avgParse { font-weight: bold; text-align: center; }
.playerName { text-transform: capitalize; }
.amount { grid-area: amount; font-style: italic; text-align: center;}
.dungeon { grid-area: name; }
.parse { grid-area: parse; }
.bannerLeft { grid-area: banL; }
.bannerRight { grid-area: banR; }
.encImage0, .encImage1, .encImage2, .encImage3, .encImage4, .encImage5, .encImage6, .encImage7 { grid-area: img; }